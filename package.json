{
  "name": "finity",
  "version": "0.6.0",
  "description": "A finite state machine library for Node.js and the browser with a friendly configuration DSL",
  "keywords": [
    "state",
    "machine",
    "state machine",
    "finite state machine",
    "fsm"
  ],
  "author": {
    "name": "Nick Uraltsev",
    "email": "nick.uraltsev@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nickuraltsev/finity.git"
  },
  "bugs": {
    "url": "https://github.com/nickuraltsev/finity/issues"
  },
  "license": "MIT",
  "files": [
    "*.md",
    "lib",
    "umd",
    "index.d.ts"
  ],
  "main": "lib/index.js",
  "types": "index.d.ts",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-loader": "^7.1.4",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "babel-register": "^6.26.0",
    "coveralls": "^3.0.1",
    "cross-env": "^5.1.6",
    "eslint": "^4.19.1",
    "eslint-config-airbnb": "^16.1.0",
    "eslint-plugin-import": "^2.12.0",
    "eslint-plugin-jsx-a11y": "^6.0.3",
    "eslint-plugin-react": "^7.9.1",
    "gzip-size-cli": "^2.1.0",
    "jasmine": "^3.1.0",
    "jasmine-spec-reporter": "^4.2.1",
    "nyc": "^12.0.2",
    "rimraf": "^2.6.2",
    "shx": "^0.2.2",
    "source-map-support": "^0.5.6",
    "typescript": "^2.9.1",
    "webpack": "^4.10.2",
    "webpack-cli": "^2.1.5"
  },
  "scripts": {
    "clean": "rimraf lib && rimraf umd && rimraf coverage",
    "build:commonjs": "babel src --out-dir lib && shx cp src/index.commonjs.js lib/index.js",
    "build:umd": "webpack src/index.commonjs.js -o umd/Finity.js --mode development",
    "build:umd:min": "webpack src/index.commonjs.js -o umd/Finity.min.js --mode production",
    "build": "npm run clean && npm run build:commonjs && npm run build:umd && npm run build:umd:min && gzip-size umd/Finity.min.js",
    "prepare": "npm run build",
    "test:lint": "eslint src test examples",
    "test:typings": "tsc",
    "test": "node -r source-map-support/register test/support/jasmineRunner.js && npm run test:typings",
    "test:coverage": "nyc --cache false --produce-source-map --reporter lcovonly --reporter text npm run test && rimraf .nyc_output",
    "test:full": "npm run test:lint && npm run build && npm run test:coverage && npm run test:typings"
  }
}
